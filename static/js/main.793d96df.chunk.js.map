{"version":3,"sources":["app/data.js","app/components/index.js","app/index.js","reportWebVitals.js","index.js"],"names":["storedData","id","categorie","nom","prix","unit√©","image","NavBar","filterResult","nbOnCart","className","to","type","placeholder","onChange","e","target","value","Card","produit","src","alt","for","class","ProductModal","prop","modalInfo","addToCart","useState","productNbWould","setProductNbWould","role","onClick","CardsList","filtered","cartProducts","finalData","map","GetInputState","isValid","fields","activeBtn","status","field","index","PaiementPage","formField","setFormField","stateBtn","setStateBtn","handleInputChange","fieldType","event","currentformFields","newObject","name","currentTarget","res","find","undefined","push","prevState","param","SideMenu","getTypeOfData","currentCategory","menuLink","GetCartTotalPrice","total","cartProduct","prixUnitaire","nombre","App","typeOfData","setTypeOfData","setFilter","prixTotal","produits","setCartProduct","updateProductQuantity","typeOperation","currentTable","slice","curentQuantity","filter","deleteFromCart","splice","added","nbAdded","newCartProduct","img","currentCartProducts","length","GetCartProducts","width","Accueil","CartPage","inputValue","filteredProductList","flat","product","productName","toLowerCase","searchValue","indexOf","path","render","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.793d96df.chunk.js","sourcesContent":["const fruits = [\r\n    {\r\n        id: 'fruit_1',\r\n        categorie: 'fruits',\r\n        nom: 'citron',\r\n        prix: 1000,\r\n        unit√©: '/pi√®ce',\r\n        image: 'citron.jpeg'\r\n    },\r\n    {\r\n        id: 'fruit_2',\r\n        categorie: 'fruits',\r\n        nom: 'orange',\r\n        prix: 500,\r\n        unit√©: '/pi√®ce',\r\n        image: 'orange.jpeg'\r\n    },\r\n    {\r\n        id: 'fruit_3',\r\n        categorie: 'fruits',\r\n        nom: 'banane',\r\n        prix: 100,\r\n        unit√©: '/pi√®ce',\r\n        image: 'banane.jpeg'\r\n    },\r\n    {\r\n        id: 'fruit_4',\r\n        categorie: 'fruits',\r\n        nom: 'kiwi',\r\n        prix: 200,\r\n        unit√©: '/pi√®ce',\r\n        image: 'kiwi.jpeg'\r\n    },\r\n];\r\n\r\n// Legumes\r\nconst legumes = [\r\n    {\r\n        id: 'legume_1',\r\n        categorie: 'legumes',\r\n        nom: 'carotte',\r\n        prix: 1000,\r\n        unit√©: '/kilos',\r\n        image: 'carotte.jpeg'\r\n    },\r\n    {\r\n        id: 'legume_2',\r\n        categorie: 'legumes',\r\n        nom: 'courgette',\r\n        prix: 1000,\r\n        unit√©: '/kilos',\r\n        image: 'courgette.jpeg'\r\n    },\r\n    {\r\n        id: 'legume_3',\r\n        categorie: 'legumes',\r\n        nom: 'oignon',\r\n        prix: 100,\r\n        unit√©: '/kilos',\r\n        image: 'oignon.jpeg'\r\n    },\r\n    {\r\n        id: 'legume_4',\r\n        categorie: 'legumes',\r\n        nom: 'poivron',\r\n        prix: 1000,\r\n        unit√©: '/kilos',\r\n        image: 'poivron.jpeg'\r\n    }\r\n];\r\n\r\n // Produits frais\r\nconst produitsFrais = [\r\n   \r\n    {\r\n        id: 'produitFrais_1',\r\n        categorie: 'produitsFrais',\r\n        nom: 'chocolat',\r\n        prix: 100,\r\n        unit√©: '/barre',\r\n        image: 'chocolat.jpeg'\r\n    },\r\n    {\r\n        id: 'produitFrais_2',\r\n        categorie: 'produitsFrais',\r\n        nom: 'lait',\r\n        prix: 300,\r\n        unit√©: '/litre',\r\n        image: 'lait.jpeg'\r\n    },\r\n    {\r\n        id: 'produitFrais_3',\r\n        categorie: 'produitsFrais',\r\n        nom: 'yaourt',\r\n        prix: 500,\r\n        unit√©: '/litre',\r\n        image: 'yaourt.jpeg'\r\n    },\r\n    {\r\n        id: 'produitFrais_2',\r\n        categorie: 'produitsFrais',\r\n        nom: 'cookie',\r\n        prix: 1500,\r\n        unit√©: '/carton',\r\n        image: 'cookie.jpeg'\r\n    }\r\n];\r\n\r\n// Epices\r\nconst epices = [\r\n     {\r\n        id: 'epice_1',\r\n        categorie: 'epices',\r\n        nom: 'oeuf',\r\n        prix: 1000,\r\n        unit√©: '/plateau',\r\n        image: 'oeuf.jpeg'\r\n    },\r\n    {\r\n        id: 'epice_2',\r\n        categorie: 'epices',\r\n        nom: 'sardine',\r\n        prix: 250,\r\n        unit√©: '/boite',\r\n        image: 'sardine.jpeg'\r\n    },\r\n    {\r\n        id: 'epice_3',\r\n        categorie: 'epices',\r\n        nom: 'soupe',\r\n        prix: 350,\r\n        unit√©: '/boite',\r\n        image: 'soupe.jpeg'\r\n    },\r\n    {\r\n        id: 'epice_4',\r\n        categorie: 'epices',\r\n        nom: 'th√©',\r\n        prix: 100,\r\n        unit√©: '/carton',\r\n        image: 'th√©.jpeg'\r\n    }\r\n];\r\n\r\n// Boissons\r\nconst boissons = [\r\n    {\r\n        id: 'boisson_1',\r\n        categorie: 'boissons',\r\n        nom: 'vin',\r\n        prix: 5000,\r\n        unit√©: '/bouteille',\r\n        image: 'vin.jpeg'\r\n    },\r\n    {\r\n        id: 'boisson_2',\r\n        categorie: 'boissons',\r\n        nom: 'champagne',\r\n        prix: 7000,\r\n        unit√©: '/bouteille',\r\n        image: 'champagne.jpeg'\r\n    },\r\n    {\r\n        id: 'boisson_3',\r\n        categorie: 'boissons',\r\n        nom: 'coca',\r\n        prix: 2500,\r\n        unit√©: '/pack',\r\n        image: 'coca.jpeg'\r\n    },\r\n    {\r\n        id: 'boisson_4',\r\n        categorie: 'boissons',\r\n        nom: 'sprite',\r\n        prix: 3000,\r\n        unit√©: '/pack',\r\n        image: 'sprite.jpeg'\r\n    }\r\n];\r\n\r\nexport const storedData = [fruits,legumes,epices,produitsFrais,boissons];","import 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { useEffect, useState } from 'react';\r\nimport {FaCheckSquare,FaShoppingBasket,FaWindowClose, FaShoppingCart} from 'react-icons/fa';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport const NavBar = ({filterResult,nbOnCart}) =>\r\n{\r\n    return (<nav className=\"navbar navbar-light px-3\">\r\n                <Link className=\"navbar-brand\" to=\"/\"><FaShoppingBasket/> E-commerc React</Link>\r\n                <form className=\"form-inline d-flex\">\r\n                <span className=\"mx-2 d-flex\">{nbOnCart} <Link to=\"/cart\" ><FaShoppingCart/></Link> </span>\r\n                <input className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\"\r\n                onChange={(e) => filterResult(e.target.value)} />\r\n                \r\n                </form>\r\n            </nav>);\r\n}\r\nexport const Card = ({produit}) =>\r\n{\r\n    return (<div className=\"col-sm-4 my-2\">\r\n        <div className=\"card\" >\r\n                <img src={process.env.PUBLIC_URL + 'assets/'+produit.categorie+'/'+produit.image} \r\n                className=\"card-img-top\" \r\n                alt={\"Image de\" + produit.nom } />\r\n                <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">{produit.nom}</h5>\r\n                    <p className=\"card-text\">{produit.prix} fcf{produit.unit√©}.</p>\r\n                      <label for={produit.id} class=\"btn btn-primary\">\r\n                      Launch demo modal\r\n                      </label>\r\n                </div>\r\n            </div>\r\n            {}\r\n    </div>);\r\n}\r\n\r\nexport const ProductModal = (prop) =>\r\n{\r\n    const {modalInfo,addToCart} = prop;\r\n    const [productNbWould,setProductNbWould] = useState(1);\r\n    \r\n    \r\n    return (<div class=\"modal fade\" id={modalInfo.id}  role=\"dialog\">\r\n    <div class=\"modal-dialog\" role=\"document\">\r\n      <div class=\"modal-content\">\r\n        <div class=\"modal-header\">\r\n          <h5 class=\"modal-title\">{modalInfo.nom}</h5>\r\n            <label for={modalInfo.id} data-dismiss=\"modal\" aria-label=\"Close\">\r\n            <FaWindowClose/>\r\n            </label>\r\n        </div>\r\n        <div class=\"modal-body\">\r\n          <div className=\"row\">\r\n            <div className=\"col\">\r\n                <img src={process.env.PUBLIC_URL+ 'assets/'+modalInfo.categorie+'/'+modalInfo.image} \r\n                alt=\"\" />\r\n                <div className=\"mt-2\">\r\n                    <button className=\"btn bg-primary\" \r\n                    onClick={() => productNbWould > 1 ? setProductNbWould(productNbWould -1) : 1} >-</button>\r\n                    <span className=\"px-2\">{productNbWould}</span>\r\n                    <button className=\"btn bg-primary\" \r\n                    onClick={() => setProductNbWould(productNbWould +1)}>+</button>\r\n                </div>\r\n            </div>\r\n            <div className=\"col\">\r\n                <p>Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod\r\n                    tempor incididunt ut labore et dolore magna consequat.</p>\r\n                <h2>{modalInfo.prix +\"Fcfa\"+modalInfo.unit√©}</h2>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"modal-footer\">\r\n\r\n          <label for={modalInfo.id} class=\"btn btn-secondary\"> Fermer </label>\r\n\r\n          <button type=\"button\" class=\"btn btn-primary\" \r\n          onClick={() => addToCart(modalInfo,productNbWould)} >Ajouter au panier</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>);\r\n    \r\n}\r\n\r\n\r\nexport const CardsList = ({storedData,filtered,cartProducts,addToCart}) =>\r\n{\r\n    let finalData = null;\r\n    if(filtered != false)\r\n    { finalData = filtered }\r\n    else\r\n    { finalData = storedData }\r\n\r\n    return(<div className=\"row\" id=\"allProductAndModal\">\r\n                {\r\n                    finalData.map(produit =>\r\n                        {\r\n                            return <>\r\n                                    <Card produit={produit} />\r\n                                    <input type=\"checkbox\" id={produit.id} />\r\n                                    <ProductModal modalInfo={produit} cartProducts={cartProducts} addToCart={addToCart} />\r\n                                    </>\r\n                        })\r\n                }\r\n            </div>);\r\n}\r\n\r\nexport const GetInputState = ({isValid,fields,activeBtn}) =>\r\n{\r\n  let status = null;\r\n  fields.map((field,index) =>\r\n  {\r\n    if(isValid == false)\r\n    {\r\n      activeBtn(false)\r\n      // status += <li>Champs {field.name} non remplis</li>\r\n    }\r\n    if(index == 5 && isValid == true)\r\n    {\r\n      activeBtn(true)\r\n      status = <li>Formulaire rempli avec success</li>\r\n    }\r\n  })\r\n  return (<ul>{status}</ul>)\r\n}\r\n\r\n\r\nexport const PaiementPage = () =>\r\n{\r\n  const [formField,setFormField] = useState({isValid: true,fields: []});\r\n  const [stateBtn,setStateBtn] = useState(false)\r\n\r\n  const activeBtn = (param) =>\r\n  {\r\n      setStateBtn(param)\r\n  }\r\n\r\n  const handleInputChange = (fieldType,event) =>\r\n  {\r\n    const currentformFields = [...formField.fields];\r\n    const newObject = {name: fieldType,value: event.currentTarget.value}\r\n   \r\n    const res = currentformFields.find(({name}) => name === fieldType);\r\n   \r\n    if(newObject.value != '')\r\n    {\r\n      if(res == undefined)\r\n      {\r\n        currentformFields.push(newObject) ;\r\n      }\r\n      else\r\n      {\r\n        res.value = newObject.value\r\n      }\r\n      setFormField({fields : currentformFields,isValid: true});\r\n    }\r\n    else\r\n    {\r\n      setFormField(prevState => {return{...prevState ,isValid: false}});\r\n    }\r\n\r\n    \r\n     \r\n  }\r\n    return (<>\r\n            <GetInputState fields={formField.fields} \r\n                            isValid={formField.isValid}\r\n                            activeBtn={activeBtn} />\r\n            <h1>Proceder au paiement</h1>\r\n            <form className=\"row\">\r\n                <div className=\"col-6 mb-3\">\r\n                <label for=\"exampleFormControlInput1\" className=\"form-label\">Nom</label>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"Doe\" name=\"nom\"\r\n                onChange={(event) => handleInputChange('nom',event)} />\r\n                </div>\r\n                <div className=\"col-6 mb-3\">\r\n                <label for=\"exampleFormControlInput1\" className=\"form-label\">Prenom</label>\r\n                <input type=\"text\" className=\"form-control\" placeholder=\"John\" name=\"prenom\"\r\n                onChange={(event) => handleInputChange('prenom',event)} />\r\n                </div>\r\n                <div className=\"col-12 mb-3\">\r\n                <label for=\"exampleFormControlInput1\" className=\"form-label\">Email</label>\r\n                <input type=\"email\" className=\"form-control\" placeholder=\"name@example.com\" name=\"mail\"\r\n                onChange={(event) => handleInputChange('mail',event)} />\r\n                </div>\r\n                <div className=\"col-12 mb-3\">\r\n                <label for=\"exampleFormControlInput1\" className=\"form-label\">Adresse</label>\r\n                <input type=\"email\" className=\"form-control\" placeholder=\"Godomey,Cocotomey\" name=\"adresse\"\r\n                onChange={(event) => handleInputChange('adresse',event)} />\r\n                </div>\r\n                <div className=\"col-6 mb-3\">\r\n                <label for=\"exampleFormControlInput1\" className=\"form-label\">Code Postal</label>\r\n                <input type=\"email\" className=\"form-control\" placeholder=\"06 BP\"\r\n                onChange={(event) => handleInputChange('codePostal',event)} />\r\n                </div>\r\n                <div className=\"col-6 mb-3\">\r\n                <label for=\"exampleFormControlInput1\" className=\"form-label\">Ville</label>\r\n                <input type=\"email\" className=\"form-control\" placeholder=\"Cotonou,...\"\r\n                onChange={(event) => handleInputChange('ville',event)} />\r\n                </div>\r\n\r\n                <div className=\"col-6 mb-3 mx-auto text-center\">\r\n                <button className={stateBtn == true ? \"btn btn-primary \" : \"btn btn-primary disabled\"} >Je valide les informations</button>\r\n                </div>\r\n            </form>\r\n    </>);\r\n}","import { storedData } from \"./data\";\r\nimport { NavBar, CardsList,PaiementPage } from \"./components\"\r\nimport './styles/MyStyle.css';\r\nimport { useState } from \"react\";\r\nimport {BrowserRouter,Switch,Route} from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst SideMenu = ({getTypeOfData,currentCategory}) =>\r\n{\r\n    const menuLinks = [\"Fruits\",\"Legumes\",\"Epiceries\",\"Produits Frais\",\"Boisson\"];\r\n    return (<div className=\"col-sm-2\">\r\n            <p>Le Menu</p>\r\n            <ul className=\"list-group list-unstyled\" id=\"produitListes\">\r\n                {menuLinks.map((menuLink,index) =>{\r\n                   if(currentCategory == index)\r\n                   {  return <li className=\"selected\" onClick={() =>  getTypeOfData(index) } >{menuLink}</li> }\r\n                   else\r\n                   {  return <li onClick={() =>  getTypeOfData(index) } >{menuLink}</li> }\r\n                })}\r\n            </ul>\r\n            </div>);\r\n}\r\n\r\n\r\n\r\nconst GetCartTotalPrice = ({cartProducts}) =>\r\n{\r\n    let total = 0;\r\n    return (<div className=\"row\">\r\n        <div className=\"py-2 border-top border-top-3 w-100 bg-success bg-opacity-10 rounded-top d-flex justify-content-between\">\r\n        <h3>Taxes </h3>\r\n        <p>0 Fcfa</p>\r\n        </div>\r\n        <div className=\"py-2 border-top border-top-3 w-100 bg-success bg-opacity-10 d-flex justify-content-between\">\r\n        <h3>Prix hors taxe</h3>\r\n            {\r\n                cartProducts.map(cartProduct =>\r\n                {\r\n                    {total = total + (cartProduct.prixUnitaire * cartProduct.nombre)}       \r\n                })\r\n            }\r\n        <p>{total} Fcfa</p>\r\n        </div>\r\n        <div className=\"py-2 border-top border-top-3 w-100 bg-success bg-opacity-10 d-flex justify-content-between\">\r\n        <h3 >Total</h3>\r\n        <p>{total} Fcfa</p>\r\n        </div>\r\n\r\n        \r\n        <Link  to=\"/Paiement\">\r\n        <button className=\"mt-2 btn btn-success w-100\">Proceder au paiement</button>\r\n        </Link>\r\n        \r\n        \r\n        </div>);\r\n}\r\n\r\n\r\nconst App = () =>\r\n{\r\n    const [typeOfData,setTypeOfData] = useState(0);\r\n    const [filtered,setFilter] = useState(false);\r\n    const [cartProducts,setCartProduct] = useState({prixTotal: 0 ,produits: [] });\r\n\r\n    const updateProductQuantity = (id,typeOperation) =>\r\n    { \r\n        let currentTable = cartProducts.produits.slice();\r\n        let curentQuantity = currentTable.filter(currentTable => currentTable.id == id)[0].nombre;\r\n        typeOperation == true\r\n        ? currentTable.filter(currentTable => currentTable.id == id)[0].nombre = curentQuantity + 1\r\n        : currentTable.filter(currentTable => currentTable.id == id)[0].nombre = (curentQuantity > 1) ? curentQuantity - 1 : 1\r\n\r\n        setCartProduct({produits : currentTable})\r\n\r\n    }\r\n\r\n    const deleteFromCart = (id) =>\r\n    {\r\n        let currentTable = cartProducts.produits.slice();\r\n        currentTable.splice(id,1);\r\n        setCartProduct({produits : currentTable})\r\n    }\r\n    // Pour ajouter des produit au panier \r\n    const addToCart = (added,nbAdded) =>\r\n    {\r\n        let total = cartProducts.prixTotal;\r\n        const newCartProduct = {id: added.id,nom: added.nom,img: added.image,categorie: added.categorie,\r\n                            nombre: nbAdded,prixUnitaire: added.prix};\r\n        const currentCartProducts = [...cartProducts.produits];\r\n\r\n        if(currentCartProducts.filter(currentCartProducts => currentCartProducts.id == added.id).length == 0)\r\n        {\r\n            currentCartProducts.push(newCartProduct)\r\n        }\r\n        else\r\n        {\r\n            currentCartProducts.filter(currentCartProducts => currentCartProducts.id == added.id)[0].nombre = nbAdded;\r\n        }\r\n        \r\n        currentCartProducts.map(cartProduct =>\r\n            {\r\n                {total = total + (cartProduct.prixUnitaire * cartProduct.nombre)}       \r\n            });\r\n        setCartProduct({prixTotal: total,produits: currentCartProducts})\r\n    }\r\n\r\n    // Pour voir le panier\r\n    const GetCartProducts = ({cartProducts}) =>\r\n{\r\n    if(cartProducts.length != 0)\r\n    {\r\n        return (<table className=\"\">\r\n            <tr>\r\n            <th>Nom du produit</th>\r\n            <th>Quantit√©</th>\r\n            <th>Prix unitaire</th>\r\n            <th>Prix total</th>\r\n            <th>Supprimer</th>\r\n            </tr>\r\n            {\r\n                cartProducts.map(cartProduct =>\r\n                    {\r\n                        // setProductQuantity(cartProduct.nombre);\r\n                        return <tr>\r\n                                <td className=\"\">\r\n                                    {cartProduct.nom}\r\n                                    <img width=\"50px\"\r\n                                    src={process.env.PUBLIC_URL + 'assets/'+cartProduct.categorie+'/'+cartProduct.img} />\r\n                                    {/* {cartProduct.img+cartProduct.categorie} */}\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"mt-2\">\r\n                                        <button className=\"btn bg-primary\" \r\n                                        onClick={() => updateProductQuantity(cartProduct.id,false)}>-</button>\r\n                                        <span className=\"px-2\">{cartProduct.nombre}</span>\r\n                                        <button className=\"btn bg-primary\" \r\n                                        onClick={() => updateProductQuantity(cartProduct.id,true)}>+</button>\r\n                                    </div>\r\n                                </td>\r\n                                <td>{cartProduct.prixUnitaire}</td>\r\n                                <td>{(cartProduct.prixUnitaire) * (cartProduct.nombre)}</td>\r\n                                <td>\r\n                                    <button type=\"button\" className=\"rounded-circle bg bg-danger btn\" \r\n                                    onClick={() => deleteFromCart(cartProduct.id)}>X</button> </td>\r\n                                </tr>\r\n                                \r\n                    })   \r\n            }</table>);\r\n    }\r\n    else\r\n    {\r\n        return (<b>Aucun produit dans le panier</b>);\r\n    }\r\n}\r\n\r\n\r\n    // Pour faire apparaitre les produits en fonction de la categorie\r\n    const getTypeOfData = (index) =>\r\n    {\r\n        setTypeOfData(index);\r\n    }\r\n\r\n    // Pour faire apparaitre les produits selon ce qui est taper dans la barre de recherche\r\n    const filterResult = (inputValue) =>\r\n    {\r\n        if(inputValue!= '')\r\n        {\r\n            const vanillaProductList = storedData.flat();\r\n\r\n            let filteredProductList = vanillaProductList.filter(product =>\r\n            {\r\n                const productName = product.nom.toLowerCase();\r\n                const searchValue = inputValue.toLowerCase();\r\n\r\n                return productName.indexOf(searchValue) > -1;\r\n            });\r\n            setFilter(filteredProductList);\r\n        }\r\n        else\r\n        {\r\n            setFilter(false);\r\n            setTypeOfData(0);\r\n        }\r\n    }\r\n\r\n    const Accueil = () =>\r\n    {\r\n        return (<div className=\"row\">\r\n                    <SideMenu getTypeOfData ={getTypeOfData} currentCategory = {typeOfData} />\r\n                    <div className=\"col-sm\">\r\n                        <CardsList storedData = {storedData[typeOfData]} \r\n                        filtered = {filtered} cartProducts={cartProducts} addToCart={addToCart} />\r\n                    </div>\r\n                    {/* <ProductModal/> */}\r\n                </div>)\r\n    }\r\n    const CartPage = () =>\r\n    {\r\n        return (<div className=\"row\" id=\"pannierPart\">\r\n                    <div className=\"col-8\" >\r\n                        <h2>Votre panier</h2>\r\n                        <GetCartProducts cartProducts={cartProducts.produits} />\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <h2>Resum√© de la commande</h2>\r\n                        <GetCartTotalPrice cartProducts={cartProducts.produits} />\r\n                    </div>\r\n                </div>)\r\n    }\r\n    return (<>\r\n                <BrowserRouter>\r\n                <NavBar filterResult={filterResult} nbOnCart={cartProducts.produits.length} />\r\n                <div className=\"container mt-4\">\r\n                    <Switch>\r\n                        <Route path='/Paiement' render={() => <PaiementPage/>}></Route>\r\n                        <Route path='/cart' render={() => <CartPage/>}></Route>\r\n                        <Route path='/' render={() => <Accueil/>}></Route>\r\n                    </Switch>\r\n                    </div>\r\n                </BrowserRouter>\r\n            </>);\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}